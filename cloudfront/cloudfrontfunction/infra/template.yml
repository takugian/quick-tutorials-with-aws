AWSTemplateFormatVersion: 2010-09-09

Description: Creates a CloudFront Distribution with a CloudFront function

Parameters:

  StaticWebsiteBucketName:
    Type: String
    Default: tg-staticwebsite-123456

  OriginAccessControlId:
    Type: String

  Owner:
    Type: String
    Default: tg

Resources:

  Function:
    Type: AWS::CloudFront::Function
    Properties:
      Name: RedirectByHeader
      AutoPublish: true
      FunctionCode: |
        function handler(event) {
        
          var request = event.request;

          if (request.uri.substr(3, 1) != '/') {

            var headers = request.headers;
            var nextUri;

            if (headers['x-channel-name']) {
              var channelName = headers['x-channel-name'].value.toLowerCase();
              if (channelName == 'mobile') {
                nextUri = '/' + channelName + request.uri;
                return {
                  'statusCode': 302,
                  'statusDescription': 'Found',
                  'headers': {
                    'location': { value: nextUri }
                  }
                }
              }
            }

          }

          return request;

        }
      FunctionConfig: 
        Comment: RedirectByHeader
        Runtime: cloudfront-js-1.0

  StaticWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref StaticWebsiteBucketName
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      Tags:
        - Key: Owner
          Value: !Ref Owner

  StaticWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: StaticWebsiteBucket
    Properties:
      Bucket: !Ref StaticWebsiteBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action:
              - s3:GetObject
            Resource: !Sub arn:aws:s3:::${StaticWebsiteBucketName}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${OriginAccessControlId}

  Distribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: [Function, StaticWebsiteBucketPolicy]
    Properties:
      DistributionConfig:
        Comment: !Sub ${StaticWebsiteBucketName}Distribution
        DefaultRootObject: index.html
        Origins:
          - Id: !Sub ${StaticWebsiteBucketName}Origin
            DomainName: !Sub ${StaticWebsiteBucketName}.s3.${AWS::Region}.amazonaws.com
            OriginAccessControlId: !Ref OriginAccessControlId
            ConnectionAttempts: 3
            ConnectionTimeout: 10
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: !Sub ${StaticWebsiteBucketName}Origin
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
          AllowedMethods:
            - GET
            - HEAD
          ViewerProtocolPolicy: allow-all
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt Function.FunctionARN
        Enabled: true
      Tags:
        - Key: Owner
          Value: !Ref Owner

Outputs:

  DomainName:
    Value: !GetAtt Distribution.DomainName