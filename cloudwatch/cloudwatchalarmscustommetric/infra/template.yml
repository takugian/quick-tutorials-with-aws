AWSTemplateFormatVersion: 2010-09-09

Description: Creates a CloudWatch Alarms for Custom Metric

Parameters:

  UseCaseName:
    Type: String
    Default: CloudWatchAlarmsCustomMetric

  AlarmEmail:
    Type: String

  Owner:
    Type: String
    Default: tg

Resources:

  Topic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${UseCaseName}Topic
      Subscription:
        - Endpoint: !Ref AlarmEmail
          Protocol: email
      Tags:
        - Key: Owner
          Value: !Ref Owner

  NumberOfBucketsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: NumberOfBucketsAlarm
      AlarmDescription: NumberOfBucketsAlarm
      Namespace: CustomMetric/S3
      MetricName: NumberOfBuckets
      # Dimensions:
      #   - Name: Name
      #     Value: Value
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 2
      Threshold: 2
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
      AlarmActions:
        - !GetAtt Topic.TopicArn
      # OKActions
      # InsufficientDataActions

  PutCustomMetricLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: PutCustomMetricExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: !Sub PutCustomMetricExecutionRolePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                  - s3:ListAllMyBuckets
                  - cloudwatch:PutMetricData
                Resource: "*"

  PutCustomMetricLambda:
    Type: AWS::Lambda::Function
    DependsOn: PutCustomMetricLambdaExecutionRole
    Properties:
      FunctionName: PutCustomMetric
      Runtime: nodejs14.x
      Role: !GetAtt PutCustomMetricLambdaExecutionRole.Arn
      Handler: index.handler
      Code:
        ZipFile: |

          const AWS = require('aws-sdk');

          var cloudwatch = new AWS.CloudWatch();
          var s3 = new AWS.S3();

          exports.handler = async (event, context) => {

            console.log('running PutCustomMetric...');

            await generateNumberOfBucketsMetric();
            
            console.log('PutCustomMetric has completed...');

          };

          async function generateNumberOfBucketsMetric() {

            console.log('running generateNumberOfBucketsMetric...');

            let response = await s3.listBuckets().promise();
            
            let numberOfBuckets = response.Buckets.length;
            
            console.log('numberOfBuckets', numberOfBuckets);
            
            await putMetricData('CustomMetric/S3', 'NumberOfBuckets', [], 'None', numberOfBuckets);
            
            console.log('generateNumberOfBucketsMetric has completed...');

          }

          async function putMetricData(namespace, metricName, dimensions, unit, value) {

            console.log('running putMetricData...');

            let params = {
              MetricData: [
                {
                  MetricName: metricName,
                  Dimensions: dimensions,
                  Unit: unit,
                  Value: value
                },
              ],
              Namespace: namespace
            };
            
            console.log('params', params);

            let response = await cloudwatch.putMetricData(params).promise();
            
            console.log('putMetricData has completed...');
            
            return response;

          }

      Tags:
        - Key: Owner
          Value: !Ref Owner

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Name: PutCustomMetricRule
      Description: PutCustomMetricRule
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Id: PutCustomMetricRule1
          Arn: !GetAtt PutCustomMetricLambda.Arn

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PutCustomMetricLambda.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ScheduledRule.Arn