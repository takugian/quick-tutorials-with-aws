AWSTemplateFormatVersion: 2010-09-09

Description: Creates a CloudWatch Alarms for a Lambda function

Parameters:
  FunctionName:
    Type: String
    Default: CloudWatchAlarmsLambda

  AlarmEmail:
    Type: String

  Owner:
    Type: String
    Default: tg

Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${FunctionName}ExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: !Sub ${FunctionName}LogsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Resource: "*"

  Lambda:
    Type: AWS::Lambda::Function
    DependsOn: ExecutionRole
    Properties:
      FunctionName: !Ref FunctionName
      Runtime: nodejs14.x
      Role: !GetAtt ExecutionRole.Arn
      Handler: index.handler
      Code:
        ZipFile: |
          exports.handler = async (event, context) => {
            console.log('Running CloudWatch Alarms');
            context.succeed("Hello, Running CloudWatch Alarms!");
          };
      Tags:
        - Key: Owner
          Value: !Ref Owner

  LamdaInvocationsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub LamdaInvocations${FunctionName}
      AlarmDescription: !Sub LamdaInvocations${FunctionName}
      Namespace: /aws/lambda
      MetricName: Invocations
      Dimensions:
        - Name: FunctionName
          Value: !Ref Lambda
      Statistic: Sum
      Period: 86400
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: LessThanThreshold
      TreatMissingData: breaching
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmTopic
      InsufficientDataActions:
        - !Ref AlarmTopic

  AlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref AlarmEmail
          Protocol: email
      Tags:
        - Key: Owner
          Value: !Ref Owner
