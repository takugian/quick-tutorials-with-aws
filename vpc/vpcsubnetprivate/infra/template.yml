AWSTemplateFormatVersion: 2010-09-09

Description: Creates a VPC and two private subnets

Parameters:
  VPCName:
    Type: String
    Default: VPCPrivate

  Owner:
    Type: String
    Default: tg

Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/16
    Private1:
      CIDR: 10.0.2.0/24
    Private2:
      CIDR: 10.0.3.0/24

  AZRegions:
    us-east-2:
      AZs: [a, b]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock:
        Fn::FindInMap: [SubnetConfig, VPC, CIDR]
      Tags:
        - Key: Name
          Value: !Ref VPCName
        - Key: Owner
          Value: !Ref Owner

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
        Fn::Sub:
          [
            "${AWS::Region}${AZ}",
            AZ: !Select [0, !FindInMap [AZRegions, !Ref AWS::Region, AZs]],
          ]
      CidrBlock:
        Fn::FindInMap: [SubnetConfig, Private1, CIDR]
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              [
                "",
                [
                  !Ref VPCName,
                  "-Private-",
                  !Select [0, !FindInMap [AZRegions, !Ref AWS::Region, AZs]],
                ],
              ]
        - Key: Network
          Value: Private
        - Key: Owner
          Value: !Ref Owner

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
        Fn::Sub:
          [
            "${AWS::Region}${AZ}",
            AZ: !Select [1, !FindInMap [AZRegions, !Ref AWS::Region, AZs]],
          ]
      CidrBlock:
        Fn::FindInMap: [SubnetConfig, Private2, CIDR]
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              [
                "",
                [
                  !Ref VPCName,
                  "-Private-",
                  !Select [1, !FindInMap [AZRegions, !Ref AWS::Region, AZs]],
                ],
              ]
        - Key: Network
          Value: Private
        - Key: Owner
          Value: !Ref Owner

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value:
            Fn::Join: ["", [!Ref VPCName, "PrivateRouteTable1"]]
        - Key: Owner
          Value: !Ref Owner

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value:
            Fn::Join: ["", [!Ref VPCName, "PrivateRouteTable2"]]
        - Key: Owner
          Value: !Ref Owner

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

Outputs:
  VPCId:
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-VPC"

  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet1"

  PrivateSubnet2:
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet2"

  VPCDefaultSecurityGroup:
    Value: !GetAtt VPC.DefaultSecurityGroup
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-VPCDefaultSecurityGroup"
