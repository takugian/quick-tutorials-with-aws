AWSTemplateFormatVersion: 2010-09-09

Description: Creates a Private REST API Gateway integrated with a Network Load Balancer and an ECS task

Parameters:
  ApiName:
    Type: String
    Default: CustomerManager

  VpcId:
    Type: String

  SubnetId1:
    Type: String

  SubnetId2:
    Type: String

  VpcLinkId:
    Type: String

  LoadBalancerDNS:
    Type: String

  StageName:
    Type: String
    Default: dev

  Owner:
    Type: String
    Default: tg

Resources:
  SecurityGroupVPCEndpoint:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub SgVPCEndpoint${ApiName}
      GroupDescription: !Sub SgVPCEndpoint${ApiName}
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

  VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    DependsOn: SecurityGroupVPCEndpoint
    Properties:
      ServiceName: com.amazonaws.us-east-2.execute-api
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      VpcId: !Ref VpcId
      SecurityGroupIds:
        - !Ref SecurityGroupVPCEndpoint
      SubnetIds:
        - !Ref SubnetId1
        - !Ref SubnetId2

  RestApi:
    Type: AWS::ApiGateway::RestApi
    DependsOn: VPCEndpoint
    Properties:
      Name: !Ref ApiName
      Description: !Ref ApiName
      EndpointConfiguration:
        Types:
          - PRIVATE
        VpcEndpointIds:
          - !Ref VPCEndpoint
      Policy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: execute-api:Invoke
            Resource: "*"
      Tags:
        - Key: Owner
          Value: !Ref Owner

  CustomerResource:
    Type: AWS::ApiGateway::Resource
    DependsOn: RestApi
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: customers

  CustomerByIdResource:
    Type: AWS::ApiGateway::Resource
    DependsOn: RestApi
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref CustomerResource
      PathPart: "{customer_id}"

  MethodGetCustomers:
    Type: "AWS::ApiGateway::Method"
    DependsOn: RestApi
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref CustomerResource
      HttpMethod: GET
      AuthorizationType: NONE
      RequestParameters:
        "method.request.querystring.customer_name": false
      MethodResponses:
        - StatusCode: 200
        - StatusCode: 500
      Integration:
        Type: HTTP_PROXY
        ConnectionId: !Ref VpcLinkId
        ConnectionType: VPC_LINK
        IntegrationResponses:
          - StatusCode: 200
          - StatusCode: 500
        IntegrationHttpMethod: GET
        Uri: !Sub ${LoadBalancerDNS}/customers

  MethodPostCustomers:
    Type: "AWS::ApiGateway::Method"
    DependsOn: RestApi
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref CustomerResource
      HttpMethod: POST
      AuthorizationType: NONE
      MethodResponses:
        - StatusCode: 201
        - StatusCode: 500
      Integration:
        Type: HTTP_PROXY
        ConnectionId: !Ref VpcLinkId
        ConnectionType: VPC_LINK
        IntegrationResponses:
          - StatusCode: 201
          - StatusCode: 500
        IntegrationHttpMethod: POST
        Uri: !Sub ${LoadBalancerDNS}/customers

  MethodGetCustomersById:
    Type: "AWS::ApiGateway::Method"
    DependsOn: RestApi
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref CustomerByIdResource
      HttpMethod: GET
      AuthorizationType: NONE
      RequestParameters:
        "method.request.path.customer_id": true
      MethodResponses:
        - StatusCode: 200
        - StatusCode: 404
        - StatusCode: 500
      Integration:
        Type: HTTP_PROXY
        ConnectionId: !Ref VpcLinkId
        ConnectionType: VPC_LINK
        RequestParameters:
          "integration.request.path.customer_id": "method.request.path.customer_id"
        IntegrationResponses:
          - StatusCode: 200
          - StatusCode: 404
          - StatusCode: 500
        IntegrationHttpMethod: GET
        Uri: !Sub ${LoadBalancerDNS}/customers/{customer_id}

  MethodPutCustomersById:
    Type: "AWS::ApiGateway::Method"
    DependsOn: RestApi
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref CustomerByIdResource
      HttpMethod: PUT
      AuthorizationType: NONE
      RequestParameters:
        "method.request.path.customer_id": true
      MethodResponses:
        - StatusCode: 204
        - StatusCode: 404
        - StatusCode: 500
      Integration:
        Type: HTTP_PROXY
        ConnectionId: !Ref VpcLinkId
        ConnectionType: VPC_LINK
        RequestParameters:
          "integration.request.path.customer_id": "method.request.path.customer_id"
        IntegrationResponses:
          - StatusCode: 204
          - StatusCode: 404
          - StatusCode: 500
        IntegrationHttpMethod: PUT
        Uri: !Sub ${LoadBalancerDNS}/customers/{customer_id}

  MethodDeleteCustomersById:
    Type: "AWS::ApiGateway::Method"
    DependsOn: RestApi
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref CustomerByIdResource
      HttpMethod: DELETE
      AuthorizationType: NONE
      RequestParameters:
        "method.request.path.customer_id": true
      MethodResponses:
        - StatusCode: 204
        - StatusCode: 404
        - StatusCode: 500
      Integration:
        Type: HTTP_PROXY
        ConnectionId: !Ref VpcLinkId
        ConnectionType: VPC_LINK
        RequestParameters:
          "integration.request.path.customer_id": "method.request.path.customer_id"
        IntegrationResponses:
          - StatusCode: 204
          - StatusCode: 404
          - StatusCode: 500
        IntegrationHttpMethod: DELETE
        Uri: !Sub ${LoadBalancerDNS}/customers/{customer_id}

  Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      [
        MethodGetCustomers,
        MethodPostCustomers,
        MethodGetCustomersById,
        MethodPutCustomersById,
        MethodDeleteCustomersById,
      ]
    Properties:
      RestApiId: !Ref RestApi
      StageName: !Ref StageName

Outputs:
  ApiGatewayId:
    Value: !Ref RestApi
