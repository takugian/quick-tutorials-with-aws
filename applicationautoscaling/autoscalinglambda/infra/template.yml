AWSTemplateFormatVersion: 2010-09-09

Description: Creates an Auto Scaling for a Lambda provisioned concurrency

Parameters:
  FunctionName:
    Type: String
    Default: LambdaAutoScaling

  Owner:
    Type: String
    Default: tg

Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${FunctionName}ExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: !Sub ${FunctionName}ExecutionRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Resource: "*"

  Lambda:
    Type: AWS::Lambda::Function
    DependsOn: ExecutionRole
    Properties:
      FunctionName: !Ref FunctionName
      Runtime: nodejs14.x
      Role: !GetAtt ExecutionRole.Arn
      Handler: index.handler
      Code:
        ZipFile: |
          exports.handler = async (event, context) => {
            console.log('event', JSON.stringify(event));
            context.succeed("OK");
          };
      Tags:
        - Key: Owner
          Value: !Ref Owner

  LambdaVersion:
    Type: AWS::Lambda::Version
    DependsOn: Lambda
    Properties:
      FunctionName: !Ref Lambda
      Description: v1

  ScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: !Sub ${FunctionName}ScalingRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:GetMetricStatistics
                  - cloudwatch:SetAlarmState
                  - cloudwatch:DeleteAlarms
                Resource: "*"

  ScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: LambdaVersion
    Properties:
      MaxCapacity: 2
      MinCapacity: 1
      ResourceId: !Join [":", [ function, !Ref FunctionName, !GetAtt LambdaVersion.Version ] ]      
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: lambda:function:ProvisionedConcurrency
      ServiceNamespace: lambda

  ScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn: ScalableTarget
    Properties:
      PolicyName: !Sub ${FunctionName}ScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 0.7
        ScaleInCooldown: 0
        ScaleOutCooldown: 0
        PredefinedMetricSpecification:
          PredefinedMetricType: LambdaProvisionedConcurrencyUtilization
